services:

  # ======================================
  # Service: Elasticsearch
  # ======================================
  elasticsearch:
    build: ./elastic/.
    container_name: elastic-container
    env_file:
      - .env_elastic  # Environment variables 
    ports:
      - 127.0.0.1:9200:9200 # REST API port for Elasticsearch, only local access
    volumes:
      - ./elastic/data:/usr/share/elasticsearch/data  # Mount persistent volume for index storage 

  # ======================================
  # Service: Apache Airflow
  # ======================================  
  airflow:
    build: ./airflow/. 
    container_name: airflow-container
    env_file:
      - .env_airflow  # Environment variables for Airflow, such as API keys
    ports:
      - "8080:8080" # Web UI port for Airflow
    depends_on:
      - postgres  # Wait for PostgreSQL to be ready
      - elasticsearch    # Wait for Elasticsearch to become available
    volumes:
      - ./airflow/dags:/opt/airflow/dags  # Mount custom DAGs from host into Airflow container

  # ======================================
  # Service: Kibana
  # ======================================
  kibana:
    build: ./kibana/.
    container_name: kibana-container
    env_file:
      - .env_kibana
    ports:
      - "5601:5601"  # Kibana Web UI port
    depends_on:
      - elasticsearch  # Wait until Elasticsearch is running

  # ======================================
  # Service: PostgreSQL
  # ======================================
  postgres:
    build: ./postgres/.
    container_name: postgres-container
    env_file:
      - .env_postgres  # Environment variables for PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # ======================================
  # Service: Gunicorn (for serving Dash app)
  # ======================================
  gunicorn:
    build:
      context: .
      dockerfile: gunicorn/Dockerfile
    container_name: gunicorn-container
    env_file:
      - .env_gunicorn
    volumes:
      - ./dash_app:/app
    ports:
      - "5173:5173"
    restart: unless-stopped
    depends_on:
      - elasticsearch  # Wait until Elasticsearch is running

volumes:
  postgres_data: 